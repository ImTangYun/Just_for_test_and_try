//
//
//
//
#include <stdio.h>
#include <stdint.h>
#include <unordered_map>
#include "checksum.h"

using std::unordered_map;
int main()
{
    Checksum summer;
    char data[] = {
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6,7,8,9,0,
        1,2,3,4,5,6,7,8,9,0
    };

    char data1[] = 
    {
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30,
        0, -1, -2, -3, -4, 5, 6, 7, -8, 11, -29, -11,-55, 23, 22, 30
    };
    unordered_map<uint32_t, int> sums_count;
    summer.Init(data1, 300);
    for (int i = 0; i < 10; ++i)
        printf("first sum: %u\n", summer.Sum1(data1 + i, 300));
    for (int i = 300; i < sizeof(data1); ++i) {
        sums_count[summer.Update(data1[i])]++;
    }
    for (auto iter = sums_count.begin(); iter != sums_count.end(); ++iter) {
        printf("sum: %u count: %d\n", iter->first, iter->second);
    }
    Checksum cs;
    string* sum = cs.StrongSum(data, sizeof(data));
    printf("sum %s\n", sum->c_str());
    return 0;
}
